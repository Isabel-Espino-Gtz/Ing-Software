{"ast":null,"code":"var _jsxFileName = \"/home/isabelespino/Escritorio/escuela/licenciatura/2024-1/ingenieria-software/practica5-proyecto/Ing-Software/practica5/Front-End/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport LoginForm from './components/LoginForm';\nimport { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\n//import Home from './Home'; \n\n// function App() {\n\n//   const [data, setData] = useState([{}])\n//   useEffect(()=> {\n//     fetch('http://localhost:5000/members').then(\n//       res => res.json()\n//     ).then(\n//       data => {\n//         setData(data)\n//         console.log(data)\n//       }\n//     )\n//   }, [])\n//   return (\n//     <div>{(typeof data.members === 'undefined')?(<p>Loading...</p>):(data.members.map((member,i) => (<p key = {i}>{member}</p>)))}</div>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //   const [email, setUsername] = useState('');\n  //   const [passwd, setpasswd] = useState('');\n  //   const [message, setMessage] = useState('');\n\n  //   const handleLogin = async () => {\n  //     try {\n  //       const response = await fetch('http://localhost:5000/login', {\n  //         method: 'POST',\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //         body: JSON.stringify({ email, passwd }),\n  //       });\n\n  //       if (response.ok) {\n  //         const data = await response.json();\n  //         if (data.success) {\n  //           // Si la respuesta es exitosa, puedes realizar alguna acción, como redirigir al usuario a otra pantalla.\n  //           setMessage('Inicio de sesión exitoso');\n  //         } else {\n  //           setMessage(data.message);\n  //         }\n  //       } else {\n  //         setMessage('Error en la solicitud');\n  //       }\n  //     } catch (error) {}\n  //   };\n\n  // // Verifica si los campos de usuario y contraseña están completos\n  // const isFormValid = email.trim() !== '' && passwd.trim() !== '';\n\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"A2rHnN+eJrwl+5GDfxoleH1+kxM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","React","LoginForm","BrowserRouter","Router","Route","Link","Routes","jsxDEV","_jsxDEV","App","_s","showLoginForm","setShowLoginForm","children","to","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Home","About","_c","$RefreshReg$"],"sources":["/home/isabelespino/Escritorio/escuela/licenciatura/2024-1/ingenieria-software/practica5-proyecto/Ing-Software/practica5/Front-End/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport LoginForm from './components/LoginForm'\nimport { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\n//import Home from './Home'; \n\n// function App() {\n\n//   const [data, setData] = useState([{}])\n//   useEffect(()=> {\n//     fetch('http://localhost:5000/members').then(\n//       res => res.json()\n//     ).then(\n//       data => {\n//         setData(data)\n//         console.log(data)\n//       }\n//     )\n//   }, [])\n//   return (\n//     <div>{(typeof data.members === 'undefined')?(<p>Loading...</p>):(data.members.map((member,i) => (<p key = {i}>{member}</p>)))}</div>\n//   );\n// }\n\nfunction App() {\n//   const [email, setUsername] = useState('');\n//   const [passwd, setpasswd] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleLogin = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email, passwd }),\n//       });\n  \n//       if (response.ok) {\n//         const data = await response.json();\n//         if (data.success) {\n//           // Si la respuesta es exitosa, puedes realizar alguna acción, como redirigir al usuario a otra pantalla.\n//           setMessage('Inicio de sesión exitoso');\n//         } else {\n//           setMessage(data.message);\n//         }\n//       } else {\n//         setMessage('Error en la solicitud');\n//       }\n//     } catch (error) {}\n//   };\n\n// // Verifica si los campos de usuario y contraseña están completos\n// const isFormValid = email.trim() !== '' && passwd.trim() !== '';\n\nconst [showLoginForm, setShowLoginForm] = useState(false);\n\nreturn (\n  <BrowserRouter>\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n    </ul>\n  </nav>\n\n  <Routes>\n    <Route path=\"/\" element={<Home />} />\n    <Route path=\"/about\" element={<About />} />\n  </Routes>\n</BrowserRouter>\n);\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,kBAAkB;AAC/E;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACf;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEzD,oBACEU,OAAA,CAACN,aAAa;IAAAW,QAAA,gBACdL,OAAA;MAAAK,QAAA,eACEL,OAAA;QAAAK,QAAA,eACEL,OAAA;UAAAK,QAAA,eACEL,OAAA,CAACH,IAAI;YAACS,EAAE,EAAC,GAAG;YAAAD,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAENV,OAAA,CAACF,MAAM;MAAAO,QAAA,gBACLL,OAAA,CAACJ,KAAK;QAACe,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEZ,OAAA,CAACa,IAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCV,OAAA,CAACJ,KAAK;QAACe,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEZ,OAAA,CAACc,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEhB;AAACR,EAAA,CAlDQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}