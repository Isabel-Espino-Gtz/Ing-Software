{"ast":null,"code":"var _jsxFileName = \"/home/isabelespino/Escritorio/escuela/licenciatura/2024-1/ingenieria-software/practica5-proyecto/Ing-Software/practica5/Front-End/src/App.js\";\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport LoginForm from './components/LoginForm';\n// function App() {\n\n//   const [data, setData] = useState([{}])\n//   useEffect(()=> {\n//     fetch('http://localhost:5000/members').then(\n//       res => res.json()\n//     ).then(\n//       data => {\n//         setData(data)\n//         console.log(data)\n//       }\n//     )\n//   }, [])\n//   return (\n//     <div>{(typeof data.members === 'undefined')?(<p>Loading...</p>):(data.members.map((member,i) => (<p key = {i}>{member}</p>)))}</div>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  //   const [email, setUsername] = useState('');\n  //   const [passwd, setpasswd] = useState('');\n  //   const [message, setMessage] = useState('');\n\n  //   const handleLogin = async () => {\n  //     try {\n  //       const response = await fetch('http://localhost:5000/login', {\n  //         method: 'POST',\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //         body: JSON.stringify({ email, passwd }),\n  //       });\n\n  //       if (response.ok) {\n  //         const data = await response.json();\n  //         if (data.success) {\n  //           // Si la respuesta es exitosa, puedes realizar alguna acción, como redirigir al usuario a otra pantalla.\n  //           setMessage('Inicio de sesión exitoso');\n  //         } else {\n  //           setMessage(data.message);\n  //         }\n  //       } else {\n  //         setMessage('Error en la solicitud');\n  //       }\n  //     } catch (error) {}\n  //   };\n\n  // // Verifica si los campos de usuario y contraseña están completos\n  // const isFormValid = email.trim() !== '' && passwd.trim() !== '';\n\n  // const [showLoginForm, setShowLoginForm] = useState(false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: !showLoginForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bienvenido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowLoginForm(true),\n        children: \"Iniciar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      setShowLoginForm: setShowLoginForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","React","LoginForm","jsxDEV","_jsxDEV","App","className","children","showLoginForm","fileName","_jsxFileName","lineNumber","columnNumber","onClick","setShowLoginForm","_c","$RefreshReg$"],"sources":["/home/isabelespino/Escritorio/escuela/licenciatura/2024-1/ingenieria-software/practica5-proyecto/Ing-Software/practica5/Front-End/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport LoginForm from './components/LoginForm'\n// function App() {\n\n//   const [data, setData] = useState([{}])\n//   useEffect(()=> {\n//     fetch('http://localhost:5000/members').then(\n//       res => res.json()\n//     ).then(\n//       data => {\n//         setData(data)\n//         console.log(data)\n//       }\n//     )\n//   }, [])\n//   return (\n//     <div>{(typeof data.members === 'undefined')?(<p>Loading...</p>):(data.members.map((member,i) => (<p key = {i}>{member}</p>)))}</div>\n//   );\n// }\n\nfunction App() {\n//   const [email, setUsername] = useState('');\n//   const [passwd, setpasswd] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleLogin = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email, passwd }),\n//       });\n  \n//       if (response.ok) {\n//         const data = await response.json();\n//         if (data.success) {\n//           // Si la respuesta es exitosa, puedes realizar alguna acción, como redirigir al usuario a otra pantalla.\n//           setMessage('Inicio de sesión exitoso');\n//         } else {\n//           setMessage(data.message);\n//         }\n//       } else {\n//         setMessage('Error en la solicitud');\n//       }\n//     } catch (error) {}\n//   };\n\n// // Verifica si los campos de usuario y contraseña están completos\n// const isFormValid = email.trim() !== '' && passwd.trim() !== '';\n\n// const [showLoginForm, setShowLoginForm] = useState(false);\n\nreturn (\n  <div className=\"app-container\">\n    {!showLoginForm ? (\n      <div>\n        <h1>Bienvenido</h1>\n        <button onClick={() => setShowLoginForm(true)}>Iniciar sesión</button>\n      </div>\n    ) : (\n      <LoginForm setShowLoginForm={setShowLoginForm} />\n    )}\n  </div>\n);\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EACf;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;;EAEA,oBACED,OAAA;IAAKE,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3B,CAACC,aAAa,gBACbJ,OAAA;MAAAG,QAAA,gBACEH,OAAA;QAAAG,QAAA,EAAI;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBR,OAAA;QAAQS,OAAO,EAAEA,CAAA,KAAMC,gBAAgB,CAAC,IAAI,CAAE;QAAAP,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC,gBAENR,OAAA,CAACF,SAAS;MAACY,gBAAgB,EAAEA;IAAiB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACjD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER;AAACG,EAAA,GA9CQV,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}