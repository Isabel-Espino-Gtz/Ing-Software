{"ast":null,"code":"var _jsxFileName = \"/home/isabelespino/Escritorio/escuela/licenciatura/2024-1/ingenieria-software/practica5-proyecto/Ing-Software/practica5/Front-End/src/components/Ver-Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminTabla() {\n  _s();\n  const [administradores, setAdministradores] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetch('http://localhost:5000/admin/ver') // Reemplaza con la URL de tu endpoint de Flask\n    .then(response => response.json()).then(data => {\n      if (data && data.administradores && Array.isArray(data.administradores)) {\n        setAdministradores(data.administradores);\n      } else {\n        console.error('Los datos recibidos no están en el formato esperado.');\n      }\n      setIsLoading(false);\n    }).catch(error => {\n      console.error('Error al obtener administradores:', error);\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contenedor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Administradores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : administradores.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: administradores.map(admin => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: admin.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: admin.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this)]\n        }, admin.idAdministrador, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay administradores disponibles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminTabla, \"QyZmcVh4yG4B5Cm6IJwvnDxTeSM=\");\n_c = AdminTabla;\nexport default AdminTabla;\nvar _c;\n$RefreshReg$(_c, \"AdminTabla\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AdminTabla","_s","administradores","setAdministradores","isLoading","setIsLoading","fetch","then","response","json","data","Array","isArray","console","error","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","admin","nombre","email","idAdministrador","_c","$RefreshReg$"],"sources":["/home/isabelespino/Escritorio/escuela/licenciatura/2024-1/ingenieria-software/practica5-proyecto/Ing-Software/practica5/Front-End/src/components/Ver-Admin.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction AdminTabla() {\n  const [administradores, setAdministradores] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/admin/ver')  // Reemplaza con la URL de tu endpoint de Flask\n      .then((response) => response.json())\n      .then((data) => {\n        if (data && data.administradores && Array.isArray(data.administradores)) {\n          setAdministradores(data.administradores);\n        } else {\n          console.error('Los datos recibidos no están en el formato esperado.');\n        }\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error al obtener administradores:', error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"contenedor\">\n      <h2>Lista de Administradores</h2>\n      {isLoading ? (\n        <p>Cargando...</p>\n      ) : (\n        administradores.length > 0 ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Nombre</th>\n                <th>Email</th>\n              </tr>\n            </thead>\n            <tbody>\n              {administradores.map((admin) => (\n                <tr key={admin.idAdministrador}>\n                  <td>{admin.nombre}</td>\n                  <td>{admin.email}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <p>No hay administradores disponibles.</p>\n        )\n      )}\n    </div>\n  );\n}\n\nexport default AdminTabla;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}