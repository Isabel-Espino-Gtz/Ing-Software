{"ast":null,"code":"var _jsxFileName = \"/home/isabelespino/Escritorio/escuela/licenciatura/2024-1/ingenieria-software/practica5-proyecto/Ing-Software/practica5/Front-End/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport LoginForm from './components/LoginForm';\n// function App() {\n\n//   const [data, setData] = useState([{}])\n//   useEffect(()=> {\n//     fetch('http://localhost:5000/members').then(\n//       res => res.json()\n//     ).then(\n//       data => {\n//         setData(data)\n//         console.log(data)\n//       }\n//     )\n//   }, [])\n//   return (\n//     <div>{(typeof data.members === 'undefined')?(<p>Loading...</p>):(data.members.map((member,i) => (<p key = {i}>{member}</p>)))}</div>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //   const [email, setUsername] = useState('');\n  //   const [passwd, setpasswd] = useState('');\n  //   const [message, setMessage] = useState('');\n\n  //   const handleLogin = async () => {\n  //     try {\n  //       const response = await fetch('http://localhost:5000/login', {\n  //         method: 'POST',\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //         body: JSON.stringify({ email, passwd }),\n  //       });\n\n  //       if (response.ok) {\n  //         const data = await response.json();\n  //         if (data.success) {\n  //           // Si la respuesta es exitosa, puedes realizar alguna acción, como redirigir al usuario a otra pantalla.\n  //           setMessage('Inicio de sesión exitoso');\n  //         } else {\n  //           setMessage(data.message);\n  //         }\n  //       } else {\n  //         setMessage('Error en la solicitud');\n  //       }\n  //     } catch (error) {}\n  //   };\n\n  // // Verifica si los campos de usuario y contraseña están completos\n  // const isFormValid = email.trim() !== '' && passwd.trim() !== '';\n\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: LoginForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        component: NotFound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"A2rHnN+eJrwl+5GDfxoleH1+kxM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","React","LoginForm","jsxDEV","_jsxDEV","App","_s","showLoginForm","setShowLoginForm","Router","children","Switch","Route","path","exact","component","fileName","_jsxFileName","lineNumber","columnNumber","Home","NotFound","_c","$RefreshReg$"],"sources":["/home/isabelespino/Escritorio/escuela/licenciatura/2024-1/ingenieria-software/practica5-proyecto/Ing-Software/practica5/Front-End/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport LoginForm from './components/LoginForm'\n// function App() {\n\n//   const [data, setData] = useState([{}])\n//   useEffect(()=> {\n//     fetch('http://localhost:5000/members').then(\n//       res => res.json()\n//     ).then(\n//       data => {\n//         setData(data)\n//         console.log(data)\n//       }\n//     )\n//   }, [])\n//   return (\n//     <div>{(typeof data.members === 'undefined')?(<p>Loading...</p>):(data.members.map((member,i) => (<p key = {i}>{member}</p>)))}</div>\n//   );\n// }\n\nfunction App() {\n//   const [email, setUsername] = useState('');\n//   const [passwd, setpasswd] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleLogin = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email, passwd }),\n//       });\n  \n//       if (response.ok) {\n//         const data = await response.json();\n//         if (data.success) {\n//           // Si la respuesta es exitosa, puedes realizar alguna acción, como redirigir al usuario a otra pantalla.\n//           setMessage('Inicio de sesión exitoso');\n//         } else {\n//           setMessage(data.message);\n//         }\n//       } else {\n//         setMessage('Error en la solicitud');\n//       }\n//     } catch (error) {}\n//   };\n\n// // Verifica si los campos de usuario y contraseña están completos\n// const isFormValid = email.trim() !== '' && passwd.trim() !== '';\n\nconst [showLoginForm, setShowLoginForm] = useState(false);\n\nreturn (\n  <Router>\n  <Switch>\n    <Route path=\"/\" exact component={LoginForm} />\n    <Route path=\"/home\" component={Home} />\n    <Route component={NotFound} />\n  </Switch>\n</Router>\n);\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACf;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEzD,oBACEK,OAAA,CAACK,MAAM;IAAAC,QAAA,eACPN,OAAA,CAACO,MAAM;MAAAD,QAAA,gBACLN,OAAA,CAACQ,KAAK;QAACC,IAAI,EAAC,GAAG;QAACC,KAAK;QAACC,SAAS,EAAEb;MAAU;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9Cf,OAAA,CAACQ,KAAK;QAACC,IAAI,EAAC,OAAO;QAACE,SAAS,EAAEK;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCf,OAAA,CAACQ,KAAK;QAACG,SAAS,EAAEM;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAET;AAACb,EAAA,CA3CQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}